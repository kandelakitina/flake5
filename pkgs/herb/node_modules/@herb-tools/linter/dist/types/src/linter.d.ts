import type { RuleClass, LintResult, LintContext } from "./types.js";
import type { HerbBackend } from "@herb-tools/core";
export declare class Linter {
    private rules;
    private herb;
    private offenses;
    /**
     * Creates a new Linter instance.
     * @param herb - The Herb backend instance for parsing and lexing
     * @param rules - Array of rule classes (Parser/AST or Lexer) to use. If not provided, uses default rules.
     */
    constructor(herb: HerbBackend, rules?: RuleClass[]);
    /**
     * Returns the default set of rule classes used by the linter.
     * @returns Array of rule classes
     */
    private getDefaultRules;
    getRuleCount(): number;
    /**
     * Type guard to check if a rule is a LexerRule
     */
    private isLexerRule;
    /**
     * Type guard to check if a rule is a SourceRule
     */
    private isSourceRule;
    /**
     * Lint source code using Parser/AST, Lexer, and Source rules.
     * @param source - The source code to lint
     * @param context - Optional context for linting (e.g., fileName for distinguishing files vs snippets)
     */
    lint(source: string, context?: Partial<LintContext>): LintResult;
}
