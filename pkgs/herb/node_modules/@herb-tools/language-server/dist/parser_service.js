"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ParserService = void 0;
const node_1 = require("vscode-languageserver/node");
const node_wasm_1 = require("@herb-tools/node-wasm");
class ErrorVisitor extends node_wasm_1.Visitor {
    constructor() {
        super(...arguments);
        this.source = "Herb Parser ";
        this.diagnostics = [];
    }
    visitChildNodes(node) {
        super.visitChildNodes(node);
        node.errors.forEach(error => this.addDiagnosticForError(error, node));
    }
    addDiagnosticForError(error, node) {
        const diagnostic = {
            source: this.source,
            severity: node_1.DiagnosticSeverity.Error,
            range: this.rangeFromHerbError(error),
            message: error.message,
            code: error.type,
            data: {
                error: error.toJSON(),
                node: node.toJSON()
            }
        };
        this.diagnostics.push(diagnostic);
    }
    rangeFromHerbError(error) {
        return node_1.Range.create(node_1.Position.create(error.location.start.line - 1, error.location.start.column), node_1.Position.create(error.location.end.line - 1, error.location.end.column));
    }
}
class ParserService {
    parseDocument(textDocument) {
        const content = textDocument.getText();
        const result = node_wasm_1.Herb.parse(content);
        const errorVisitor = new ErrorVisitor();
        result.visit(errorVisitor);
        return {
            document: result.value,
            diagnostics: errorVisitor.diagnostics
        };
    }
}
exports.ParserService = ParserService;
//# sourceMappingURL=parser_service.js.map