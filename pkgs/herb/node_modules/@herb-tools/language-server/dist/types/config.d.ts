export type HerbConfigOptions = {
    formatter?: {
        enabled?: boolean;
        include?: string[];
        exclude?: string[];
        indentWidth?: number;
        maxLineLength?: number;
    };
};
export type HerbLSPConfig = {
    version: string;
    createdAt: string;
    updatedAt: string;
    options: HerbConfigOptions;
};
export declare class Config {
    static configPath: string;
    readonly path: string;
    config: HerbLSPConfig;
    constructor(projectPath: string, config: HerbLSPConfig);
    get version(): string;
    get createdAt(): Date;
    get updatedAt(): Date;
    get options(): HerbConfigOptions;
    toJSON(): string;
    private updateTimestamp;
    private updateVersion;
    write(): Promise<void>;
    read(): Promise<string>;
    static configPathFromProjectPath(projectPath: string): string;
    static fromPathOrNew(projectPath: string): Promise<Config>;
    static fromPath(projectPath: string): Promise<Config>;
    static newConfig(projectPath: string): Config;
}
