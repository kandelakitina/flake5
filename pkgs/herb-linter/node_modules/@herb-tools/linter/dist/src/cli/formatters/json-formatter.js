import { BaseFormatter } from "./base-formatter.js";
export class JSONFormatter extends BaseFormatter {
    async format(allOffenses) {
        const jsonOffenses = allOffenses.map(({ filename, offense }) => ({
            filename,
            message: offense.message,
            location: offense.location.toJSON(),
            severity: offense.severity,
            code: offense.code,
            source: offense.source
        }));
        const output = {
            offenses: jsonOffenses,
            summary: null,
            timing: null,
            completed: true,
            clean: jsonOffenses.length === 0,
            message: null
        };
        console.log(JSON.stringify(output, null, 2));
    }
    async formatWithSummary(allOffenses, options) {
        const jsonOffenses = allOffenses.map(({ filename, offense }) => ({
            filename,
            message: offense.message,
            location: offense.location.toJSON(),
            severity: offense.severity,
            code: offense.code,
            source: offense.source
        }));
        const summary = {
            filesChecked: options.files.length,
            filesWithOffenses: options.filesWithOffenses,
            totalErrors: options.totalErrors,
            totalWarnings: options.totalWarnings,
            totalOffenses: options.totalErrors + options.totalWarnings,
            ruleCount: options.ruleCount
        };
        const output = {
            offenses: jsonOffenses,
            summary,
            timing: null,
            completed: true,
            clean: options.totalErrors === 0 && options.totalWarnings === 0,
            message: null
        };
        const duration = Date.now() - options.startTime;
        output.timing = options.showTiming ? {
            startTime: options.startDate.toISOString(),
            duration: duration
        } : null;
        console.log(JSON.stringify(output, null, 2));
    }
    formatFile(_filename, _offenses) {
        // Not used in JSON formatter, everything is handled in format()
    }
}
//# sourceMappingURL=json-formatter.js.map