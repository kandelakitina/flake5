import type { Color } from "./color.js";
export type Theme = "onedark" | "github-light" | "dracula" | "tokyo-night" | "simple";
export type ThemeInput = Theme | string;
export declare const THEME_NAMES: readonly ["onedark", "github-light", "dracula", "tokyo-night", "simple"];
export declare const DEFAULT_THEME: Theme;
export interface ColorScheme {
    TOKEN_WHITESPACE: Color | null;
    TOKEN_NBSP: Color | null;
    TOKEN_NEWLINE: Color | null;
    TOKEN_IDENTIFIER: Color;
    RUBY_KEYWORD: Color;
    TOKEN_HTML_DOCTYPE: Color;
    TOKEN_HTML_TAG_START: Color;
    TOKEN_HTML_TAG_START_CLOSE: Color;
    TOKEN_HTML_TAG_END: Color;
    TOKEN_HTML_TAG_SELF_CLOSE: Color;
    TOKEN_HTML_COMMENT_START: Color;
    TOKEN_HTML_COMMENT_END: Color;
    TOKEN_ERB_START: Color;
    TOKEN_ERB_CONTENT: Color;
    TOKEN_ERB_END: Color;
    TOKEN_LT: Color;
    TOKEN_SLASH: Color;
    TOKEN_EQUALS: Color;
    TOKEN_QUOTE: Color;
    TOKEN_DASH: Color;
    TOKEN_UNDERSCORE: Color;
    TOKEN_EXCLAMATION: Color;
    TOKEN_SEMICOLON: Color;
    TOKEN_COLON: Color;
    TOKEN_PERCENT: Color;
    TOKEN_AMPERSAND: Color;
    TOKEN_CHARACTER: Color;
    TOKEN_ERROR: Color;
    TOKEN_EOF: Color | null;
}
export declare const themes: Record<Theme, ColorScheme>;
export declare function isValidTheme(theme: string): theme is Theme;
export declare function getThemeNames(): readonly string[];
export declare function getTheme(theme: Theme): ColorScheme;
export declare function getDefaultTheme(): Theme;
export declare function loadCustomTheme(themePath: string): ColorScheme;
export declare function resolveTheme(themeInput: ThemeInput): ColorScheme;
export declare function isCustomTheme(themeInput: ThemeInput): boolean;
