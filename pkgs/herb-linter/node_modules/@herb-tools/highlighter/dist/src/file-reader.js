import { readFileSync } from "fs";
export class FileReader {
    highlighter;
    constructor(highlighter) {
        this.highlighter = highlighter;
    }
    highlightFromPath(filePath, options = {}) {
        this.highlighter.requireInitialized();
        try {
            const content = readFileSync(filePath, "utf8");
            return this.highlighter.highlight(filePath, content, options);
        }
        catch (error) {
            throw new Error(`Failed to read file ${filePath}: ${error instanceof Error ? error.message : String(error)}`);
        }
    }
    highlightDiagnosticFromPath(filePath, diagnostic, options = {}) {
        this.highlighter.requireInitialized();
        try {
            const content = readFileSync(filePath, "utf8");
            return this.highlighter.highlightDiagnostic(filePath, diagnostic, content, options);
        }
        catch (error) {
            throw new Error(`Failed to read file ${filePath}: ${error instanceof Error ? error.message : String(error)}`);
        }
    }
}
//# sourceMappingURL=file-reader.js.map