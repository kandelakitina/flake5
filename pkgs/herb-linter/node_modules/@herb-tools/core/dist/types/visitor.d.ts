import { Node, DocumentNode, LiteralNode, HTMLOpenTagNode, HTMLCloseTagNode, HTMLElementNode, HTMLAttributeValueNode, HTMLAttributeNameNode, HTMLAttributeNode, HTMLTextNode, HTMLCommentNode, HTMLDoctypeNode, XMLDeclarationNode, CDATANode, WhitespaceNode, ERBContentNode, ERBEndNode, ERBElseNode, ERBIfNode, ERBBlockNode, ERBWhenNode, ERBCaseNode, ERBCaseMatchNode, ERBWhileNode, ERBUntilNode, ERBForNode, ERBRescueNode, ERBEnsureNode, ERBBeginNode, ERBUnlessNode, ERBYieldNode, ERBInNode } from "./nodes.js";
export declare class Visitor {
    visit(node: Node | null | undefined): void;
    visitAll(nodes: (Node | null | undefined)[]): void;
    visitChildNodes(node: Node): void;
    visitDocumentNode(node: DocumentNode): void;
    visitLiteralNode(node: LiteralNode): void;
    visitHTMLOpenTagNode(node: HTMLOpenTagNode): void;
    visitHTMLCloseTagNode(node: HTMLCloseTagNode): void;
    visitHTMLElementNode(node: HTMLElementNode): void;
    visitHTMLAttributeValueNode(node: HTMLAttributeValueNode): void;
    visitHTMLAttributeNameNode(node: HTMLAttributeNameNode): void;
    visitHTMLAttributeNode(node: HTMLAttributeNode): void;
    visitHTMLTextNode(node: HTMLTextNode): void;
    visitHTMLCommentNode(node: HTMLCommentNode): void;
    visitHTMLDoctypeNode(node: HTMLDoctypeNode): void;
    visitXMLDeclarationNode(node: XMLDeclarationNode): void;
    visitCDATANode(node: CDATANode): void;
    visitWhitespaceNode(node: WhitespaceNode): void;
    visitERBContentNode(node: ERBContentNode): void;
    visitERBEndNode(node: ERBEndNode): void;
    visitERBElseNode(node: ERBElseNode): void;
    visitERBIfNode(node: ERBIfNode): void;
    visitERBBlockNode(node: ERBBlockNode): void;
    visitERBWhenNode(node: ERBWhenNode): void;
    visitERBCaseNode(node: ERBCaseNode): void;
    visitERBCaseMatchNode(node: ERBCaseMatchNode): void;
    visitERBWhileNode(node: ERBWhileNode): void;
    visitERBUntilNode(node: ERBUntilNode): void;
    visitERBForNode(node: ERBForNode): void;
    visitERBRescueNode(node: ERBRescueNode): void;
    visitERBEnsureNode(node: ERBEnsureNode): void;
    visitERBBeginNode(node: ERBBeginNode): void;
    visitERBUnlessNode(node: ERBUnlessNode): void;
    visitERBYieldNode(node: ERBYieldNode): void;
    visitERBInNode(node: ERBInNode): void;
}
